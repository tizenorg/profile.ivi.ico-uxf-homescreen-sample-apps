# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/ico-uxf-homescreen-sample-app
pkgincludedir = $(includedir)/ico-uxf-homescreen-sample-app
pkglibdir = $(libdir)/ico-uxf-homescreen-sample-app
pkglibexecdir = $(libexecdir)/ico-uxf-homescreen-sample-app
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
app_soundsample_bin_PROGRAMS = ico-app-soundsample$(EXEEXT)
app_vicsample_bin_PROGRAMS = ico-app-vicsample$(EXEEXT)
app_samplenavi_bin_PROGRAMS = ico-app-samplenavi$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(app_samplenavi_bindir)" \
	"$(DESTDIR)$(app_soundsample_bindir)" \
	"$(DESTDIR)$(app_vicsample_bindir)"
PROGRAMS = $(app_samplenavi_bin_PROGRAMS) \
	$(app_soundsample_bin_PROGRAMS) $(app_vicsample_bin_PROGRAMS)
am_ico_app_samplenavi_OBJECTS =  \
	ico_app_samplenavi-samplenavi.$(OBJEXT) \
	ico_app_samplenavi-e3d.$(OBJEXT)
ico_app_samplenavi_OBJECTS = $(am_ico_app_samplenavi_OBJECTS)
ico_app_samplenavi_DEPENDENCIES =
ico_app_samplenavi_LINK = $(CCLD) $(ico_app_samplenavi_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_ico_app_soundsample_OBJECTS =  \
	ico_app_soundsample-soundsample.$(OBJEXT) \
	ico_app_soundsample-soundsample_pulse_async_test.$(OBJEXT) \
	ico_app_soundsample-soundsample_yswavfile.$(OBJEXT)
ico_app_soundsample_OBJECTS = $(am_ico_app_soundsample_OBJECTS)
ico_app_soundsample_DEPENDENCIES =
am_ico_app_vicsample_OBJECTS = ico_app_vicsample-vicsample.$(OBJEXT)
ico_app_vicsample_OBJECTS = $(am_ico_app_vicsample_OBJECTS)
ico_app_vicsample_DEPENDENCIES =
ico_app_vicsample_LINK = $(CCLD) $(ico_app_vicsample_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(ico_app_samplenavi_SOURCES) $(ico_app_soundsample_SOURCES) \
	$(ico_app_vicsample_SOURCES)
DIST_SOURCES = $(ico_app_samplenavi_SOURCES) \
	$(ico_app_soundsample_SOURCES) $(ico_app_vicsample_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/missing --run tar
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/missing --run autoconf
AUTOHEADER = ${SHELL} /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/missing --run autoheader
AUTOMAKE = ${SHELL} /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = ico-uxf-homescreen-sample-app
PACKAGE_BUGREPORT = https://BUG-REPORT-ADDRESS
PACKAGE_NAME = ico-uxf-HomeScreen-sample-app
PACKAGE_STRING = ico-uxf-HomeScreen-sample-app 0.0.1
PACKAGE_TARNAME = ico-uxf-homescreen-sample-app
PACKAGE_URL = 
PACKAGE_VERSION = 0.0.1
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.0.1
abs_builddir = /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/src
abs_srcdir = /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/src
abs_top_builddir = /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work
abs_top_srcdir = /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/tizen/Release/tmp_pkg/ico-uxf-HomeScreen-sample-app-0.0.5_work/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
app_soundsample_bindir = /opt/apps/org.tizen.ico.app-soundsample/bin
ico_app_soundsample_SOURCES = soundsample.c soundsample.h soundsample_pulse_async_test.cpp soundsample_yswavfile.cpp soundsample_yswavfile.h
ico_app_soundsample_LDADD = -L/usr/lib -lico-app-fw-efl -lico-uxf-weston-plugin -lico-app-fw -lwebsockets -laul -lecore_evas -lecore -leina -levas -leina -lrt -lecore_wayland -lelementary -lm -leet -levas -lrt -lecore -leina -lecore_evas -lecore_file -ledje  -lethumb_client -lecore_imf -lecore_con -lpulse -lglib-2.0
ico_app_soundsample_CFLAGS = -Wall -I. -I/usr/include/ico-appfw -I/usr/include/eina-1 -I/usr/include/eina-1/eina/ -I/usr/include/ecore-1 -I/usr/include/evas-1 -I/usr/include/elementary-1 -I/usr/include/ -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
ico_app_soundsample_CPPFLAGS = -Wall -I. -I/usr/include/ico-appfw -I/usr/include/eina-1 -I/usr/include/eina-1/eina/ -I/usr/include/ecore-1 -I/usr/include/evas-1 -I/usr/include/elementary-1 -I/usr/include/ -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
app_vicsample_bindir = /opt/apps/org.tizen.ico.app-vicsample/bin
ico_app_vicsample_SOURCES = vicsample.c 
ico_app_vicsample_LDADD = -L/usr/lib -lico-app-fw-efl -lico-uxf-weston-plugin -lico-app-fw -laul -lwebsockets -lecore_evas -lecore -leina -levas -leina -lrt -lecore_wayland -lelementary -lm -leet -levas -lrt -lecore -leina -lecore_evas -lecore_file -ledje  -lethumb_client -lecore_imf -lecore_con -ldbus-1 -lpthread -lrt
ico_app_vicsample_CFLAGS = -Wall -I. -I/usr/include/ico-appfw -I/usr/include/eina-1 -I/usr/include/eina-1/eina/ -I/usr/include/ecore-1 -I/usr/include/evas-1 -I/usr/include/elementary-1 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I~/HomeScreen/include
app_samplenavi_bindir = /opt/apps/org.tizen.ico.app-samplenavi/bin
ico_app_samplenavi_SOURCES = samplenavi.c samplenavi.h e3d.c e3d.h define.h
ico_app_samplenavi_LDADD = -L/usr/lib -lico-app-fw-efl -lico-uxf-weston-plugin -lico-app-fw -ldbus-1 -lpthread -lrt -lwebsockets -laul -lecore_evas -lecore -leina -levas -lecore_wayland -lelementary -lm -leet -lecore_file -ledje -lethumb_client -lecore_imf -lecore_con -lglib-2.0 -lwayland-client -lwayland-cursor -lwayland-egl -lwayland-server -lewebkit2 -lcairo -lGLESv2 -lEGL -lpangocairo-1.0 -lpangoft2-1.0 -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgdk_pixbuf-2.0 -lgthread-2.0
ico_app_samplenavi_CFLAGS = -Wall -I. -I/usr/include/ico-appfw -I/usr/include/ecore-1 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/eina-1 -I/usr/include/eina-1/eina -I/usr/include/evas-1 -I/usr/include/eet-1 -I/usr/include/pixman-1 -I/usr/include/harfbuzz -I/usr/include/fribidi -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/elementary-1 -I/usr/include/ethumb-1 -I/usr/include/efreet-1 -I/usr/include/e_dbus-1 -I/usr/include/emotion-1 -I/usr/include/edje-1 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/embryo-1 -I/usr/include/ewebkit2-0 -I/usr/include/ewebkit2-0/WebKit2 -I/usr/include/ewebkit2-0/NPAPI -I/usr/include/cairo -I/usr/include/libpng12 -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-app_samplenavi_binPROGRAMS: $(app_samplenavi_bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(app_samplenavi_bindir)" || $(MKDIR_P) "$(DESTDIR)$(app_samplenavi_bindir)"
	@list='$(app_samplenavi_bin_PROGRAMS)'; test -n "$(app_samplenavi_bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(app_samplenavi_bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(app_samplenavi_bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-app_samplenavi_binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(app_samplenavi_bin_PROGRAMS)'; test -n "$(app_samplenavi_bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(app_samplenavi_bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(app_samplenavi_bindir)" && rm -f $$files

clean-app_samplenavi_binPROGRAMS:
	-test -z "$(app_samplenavi_bin_PROGRAMS)" || rm -f $(app_samplenavi_bin_PROGRAMS)
install-app_soundsample_binPROGRAMS: $(app_soundsample_bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(app_soundsample_bindir)" || $(MKDIR_P) "$(DESTDIR)$(app_soundsample_bindir)"
	@list='$(app_soundsample_bin_PROGRAMS)'; test -n "$(app_soundsample_bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(app_soundsample_bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(app_soundsample_bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-app_soundsample_binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(app_soundsample_bin_PROGRAMS)'; test -n "$(app_soundsample_bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(app_soundsample_bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(app_soundsample_bindir)" && rm -f $$files

clean-app_soundsample_binPROGRAMS:
	-test -z "$(app_soundsample_bin_PROGRAMS)" || rm -f $(app_soundsample_bin_PROGRAMS)
install-app_vicsample_binPROGRAMS: $(app_vicsample_bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(app_vicsample_bindir)" || $(MKDIR_P) "$(DESTDIR)$(app_vicsample_bindir)"
	@list='$(app_vicsample_bin_PROGRAMS)'; test -n "$(app_vicsample_bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(app_vicsample_bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(app_vicsample_bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-app_vicsample_binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(app_vicsample_bin_PROGRAMS)'; test -n "$(app_vicsample_bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(app_vicsample_bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(app_vicsample_bindir)" && rm -f $$files

clean-app_vicsample_binPROGRAMS:
	-test -z "$(app_vicsample_bin_PROGRAMS)" || rm -f $(app_vicsample_bin_PROGRAMS)
ico-app-samplenavi$(EXEEXT): $(ico_app_samplenavi_OBJECTS) $(ico_app_samplenavi_DEPENDENCIES) 
	@rm -f ico-app-samplenavi$(EXEEXT)
	$(AM_V_CCLD)$(ico_app_samplenavi_LINK) $(ico_app_samplenavi_OBJECTS) $(ico_app_samplenavi_LDADD) $(LIBS)
ico-app-soundsample$(EXEEXT): $(ico_app_soundsample_OBJECTS) $(ico_app_soundsample_DEPENDENCIES) 
	@rm -f ico-app-soundsample$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ico_app_soundsample_OBJECTS) $(ico_app_soundsample_LDADD) $(LIBS)
ico-app-vicsample$(EXEEXT): $(ico_app_vicsample_OBJECTS) $(ico_app_vicsample_DEPENDENCIES) 
	@rm -f ico-app-vicsample$(EXEEXT)
	$(AM_V_CCLD)$(ico_app_vicsample_LINK) $(ico_app_vicsample_OBJECTS) $(ico_app_vicsample_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ico_app_samplenavi-e3d.Po
include ./$(DEPDIR)/ico_app_samplenavi-samplenavi.Po
include ./$(DEPDIR)/ico_app_soundsample-soundsample.Po
include ./$(DEPDIR)/ico_app_soundsample-soundsample_pulse_async_test.Po
include ./$(DEPDIR)/ico_app_soundsample-soundsample_yswavfile.Po
include ./$(DEPDIR)/ico_app_vicsample-vicsample.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

ico_app_samplenavi-samplenavi.o: samplenavi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_samplenavi_CFLAGS) $(CFLAGS) -MT ico_app_samplenavi-samplenavi.o -MD -MP -MF $(DEPDIR)/ico_app_samplenavi-samplenavi.Tpo -c -o ico_app_samplenavi-samplenavi.o `test -f 'samplenavi.c' || echo '$(srcdir)/'`samplenavi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_samplenavi-samplenavi.Tpo $(DEPDIR)/ico_app_samplenavi-samplenavi.Po
#	$(AM_V_CC) \
#	source='samplenavi.c' object='ico_app_samplenavi-samplenavi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_samplenavi_CFLAGS) $(CFLAGS) -c -o ico_app_samplenavi-samplenavi.o `test -f 'samplenavi.c' || echo '$(srcdir)/'`samplenavi.c

ico_app_samplenavi-samplenavi.obj: samplenavi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_samplenavi_CFLAGS) $(CFLAGS) -MT ico_app_samplenavi-samplenavi.obj -MD -MP -MF $(DEPDIR)/ico_app_samplenavi-samplenavi.Tpo -c -o ico_app_samplenavi-samplenavi.obj `if test -f 'samplenavi.c'; then $(CYGPATH_W) 'samplenavi.c'; else $(CYGPATH_W) '$(srcdir)/samplenavi.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_samplenavi-samplenavi.Tpo $(DEPDIR)/ico_app_samplenavi-samplenavi.Po
#	$(AM_V_CC) \
#	source='samplenavi.c' object='ico_app_samplenavi-samplenavi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_samplenavi_CFLAGS) $(CFLAGS) -c -o ico_app_samplenavi-samplenavi.obj `if test -f 'samplenavi.c'; then $(CYGPATH_W) 'samplenavi.c'; else $(CYGPATH_W) '$(srcdir)/samplenavi.c'; fi`

ico_app_samplenavi-e3d.o: e3d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_samplenavi_CFLAGS) $(CFLAGS) -MT ico_app_samplenavi-e3d.o -MD -MP -MF $(DEPDIR)/ico_app_samplenavi-e3d.Tpo -c -o ico_app_samplenavi-e3d.o `test -f 'e3d.c' || echo '$(srcdir)/'`e3d.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_samplenavi-e3d.Tpo $(DEPDIR)/ico_app_samplenavi-e3d.Po
#	$(AM_V_CC) \
#	source='e3d.c' object='ico_app_samplenavi-e3d.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_samplenavi_CFLAGS) $(CFLAGS) -c -o ico_app_samplenavi-e3d.o `test -f 'e3d.c' || echo '$(srcdir)/'`e3d.c

ico_app_samplenavi-e3d.obj: e3d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_samplenavi_CFLAGS) $(CFLAGS) -MT ico_app_samplenavi-e3d.obj -MD -MP -MF $(DEPDIR)/ico_app_samplenavi-e3d.Tpo -c -o ico_app_samplenavi-e3d.obj `if test -f 'e3d.c'; then $(CYGPATH_W) 'e3d.c'; else $(CYGPATH_W) '$(srcdir)/e3d.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_samplenavi-e3d.Tpo $(DEPDIR)/ico_app_samplenavi-e3d.Po
#	$(AM_V_CC) \
#	source='e3d.c' object='ico_app_samplenavi-e3d.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_samplenavi_CFLAGS) $(CFLAGS) -c -o ico_app_samplenavi-e3d.obj `if test -f 'e3d.c'; then $(CYGPATH_W) 'e3d.c'; else $(CYGPATH_W) '$(srcdir)/e3d.c'; fi`

ico_app_soundsample-soundsample.o: soundsample.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(ico_app_soundsample_CFLAGS) $(CFLAGS) -MT ico_app_soundsample-soundsample.o -MD -MP -MF $(DEPDIR)/ico_app_soundsample-soundsample.Tpo -c -o ico_app_soundsample-soundsample.o `test -f 'soundsample.c' || echo '$(srcdir)/'`soundsample.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_soundsample-soundsample.Tpo $(DEPDIR)/ico_app_soundsample-soundsample.Po
#	$(AM_V_CC) \
#	source='soundsample.c' object='ico_app_soundsample-soundsample.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(ico_app_soundsample_CFLAGS) $(CFLAGS) -c -o ico_app_soundsample-soundsample.o `test -f 'soundsample.c' || echo '$(srcdir)/'`soundsample.c

ico_app_soundsample-soundsample.obj: soundsample.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(ico_app_soundsample_CFLAGS) $(CFLAGS) -MT ico_app_soundsample-soundsample.obj -MD -MP -MF $(DEPDIR)/ico_app_soundsample-soundsample.Tpo -c -o ico_app_soundsample-soundsample.obj `if test -f 'soundsample.c'; then $(CYGPATH_W) 'soundsample.c'; else $(CYGPATH_W) '$(srcdir)/soundsample.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_soundsample-soundsample.Tpo $(DEPDIR)/ico_app_soundsample-soundsample.Po
#	$(AM_V_CC) \
#	source='soundsample.c' object='ico_app_soundsample-soundsample.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(ico_app_soundsample_CFLAGS) $(CFLAGS) -c -o ico_app_soundsample-soundsample.obj `if test -f 'soundsample.c'; then $(CYGPATH_W) 'soundsample.c'; else $(CYGPATH_W) '$(srcdir)/soundsample.c'; fi`

ico_app_vicsample-vicsample.o: vicsample.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_vicsample_CFLAGS) $(CFLAGS) -MT ico_app_vicsample-vicsample.o -MD -MP -MF $(DEPDIR)/ico_app_vicsample-vicsample.Tpo -c -o ico_app_vicsample-vicsample.o `test -f 'vicsample.c' || echo '$(srcdir)/'`vicsample.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_vicsample-vicsample.Tpo $(DEPDIR)/ico_app_vicsample-vicsample.Po
#	$(AM_V_CC) \
#	source='vicsample.c' object='ico_app_vicsample-vicsample.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_vicsample_CFLAGS) $(CFLAGS) -c -o ico_app_vicsample-vicsample.o `test -f 'vicsample.c' || echo '$(srcdir)/'`vicsample.c

ico_app_vicsample-vicsample.obj: vicsample.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_vicsample_CFLAGS) $(CFLAGS) -MT ico_app_vicsample-vicsample.obj -MD -MP -MF $(DEPDIR)/ico_app_vicsample-vicsample.Tpo -c -o ico_app_vicsample-vicsample.obj `if test -f 'vicsample.c'; then $(CYGPATH_W) 'vicsample.c'; else $(CYGPATH_W) '$(srcdir)/vicsample.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_vicsample-vicsample.Tpo $(DEPDIR)/ico_app_vicsample-vicsample.Po
#	$(AM_V_CC) \
#	source='vicsample.c' object='ico_app_vicsample-vicsample.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ico_app_vicsample_CFLAGS) $(CFLAGS) -c -o ico_app_vicsample-vicsample.obj `if test -f 'vicsample.c'; then $(CYGPATH_W) 'vicsample.c'; else $(CYGPATH_W) '$(srcdir)/vicsample.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ico_app_soundsample-soundsample_pulse_async_test.o: soundsample_pulse_async_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ico_app_soundsample-soundsample_pulse_async_test.o -MD -MP -MF $(DEPDIR)/ico_app_soundsample-soundsample_pulse_async_test.Tpo -c -o ico_app_soundsample-soundsample_pulse_async_test.o `test -f 'soundsample_pulse_async_test.cpp' || echo '$(srcdir)/'`soundsample_pulse_async_test.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_soundsample-soundsample_pulse_async_test.Tpo $(DEPDIR)/ico_app_soundsample-soundsample_pulse_async_test.Po
#	$(AM_V_CXX) \
#	source='soundsample_pulse_async_test.cpp' object='ico_app_soundsample-soundsample_pulse_async_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ico_app_soundsample-soundsample_pulse_async_test.o `test -f 'soundsample_pulse_async_test.cpp' || echo '$(srcdir)/'`soundsample_pulse_async_test.cpp

ico_app_soundsample-soundsample_pulse_async_test.obj: soundsample_pulse_async_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ico_app_soundsample-soundsample_pulse_async_test.obj -MD -MP -MF $(DEPDIR)/ico_app_soundsample-soundsample_pulse_async_test.Tpo -c -o ico_app_soundsample-soundsample_pulse_async_test.obj `if test -f 'soundsample_pulse_async_test.cpp'; then $(CYGPATH_W) 'soundsample_pulse_async_test.cpp'; else $(CYGPATH_W) '$(srcdir)/soundsample_pulse_async_test.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_soundsample-soundsample_pulse_async_test.Tpo $(DEPDIR)/ico_app_soundsample-soundsample_pulse_async_test.Po
#	$(AM_V_CXX) \
#	source='soundsample_pulse_async_test.cpp' object='ico_app_soundsample-soundsample_pulse_async_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ico_app_soundsample-soundsample_pulse_async_test.obj `if test -f 'soundsample_pulse_async_test.cpp'; then $(CYGPATH_W) 'soundsample_pulse_async_test.cpp'; else $(CYGPATH_W) '$(srcdir)/soundsample_pulse_async_test.cpp'; fi`

ico_app_soundsample-soundsample_yswavfile.o: soundsample_yswavfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ico_app_soundsample-soundsample_yswavfile.o -MD -MP -MF $(DEPDIR)/ico_app_soundsample-soundsample_yswavfile.Tpo -c -o ico_app_soundsample-soundsample_yswavfile.o `test -f 'soundsample_yswavfile.cpp' || echo '$(srcdir)/'`soundsample_yswavfile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_soundsample-soundsample_yswavfile.Tpo $(DEPDIR)/ico_app_soundsample-soundsample_yswavfile.Po
#	$(AM_V_CXX) \
#	source='soundsample_yswavfile.cpp' object='ico_app_soundsample-soundsample_yswavfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ico_app_soundsample-soundsample_yswavfile.o `test -f 'soundsample_yswavfile.cpp' || echo '$(srcdir)/'`soundsample_yswavfile.cpp

ico_app_soundsample-soundsample_yswavfile.obj: soundsample_yswavfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ico_app_soundsample-soundsample_yswavfile.obj -MD -MP -MF $(DEPDIR)/ico_app_soundsample-soundsample_yswavfile.Tpo -c -o ico_app_soundsample-soundsample_yswavfile.obj `if test -f 'soundsample_yswavfile.cpp'; then $(CYGPATH_W) 'soundsample_yswavfile.cpp'; else $(CYGPATH_W) '$(srcdir)/soundsample_yswavfile.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ico_app_soundsample-soundsample_yswavfile.Tpo $(DEPDIR)/ico_app_soundsample-soundsample_yswavfile.Po
#	$(AM_V_CXX) \
#	source='soundsample_yswavfile.cpp' object='ico_app_soundsample-soundsample_yswavfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ico_app_soundsample_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ico_app_soundsample-soundsample_yswavfile.obj `if test -f 'soundsample_yswavfile.cpp'; then $(CYGPATH_W) 'soundsample_yswavfile.cpp'; else $(CYGPATH_W) '$(srcdir)/soundsample_yswavfile.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(app_samplenavi_bindir)" "$(DESTDIR)$(app_soundsample_bindir)" "$(DESTDIR)$(app_vicsample_bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-app_samplenavi_binPROGRAMS \
	clean-app_soundsample_binPROGRAMS \
	clean-app_vicsample_binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-app_samplenavi_binPROGRAMS \
	install-app_soundsample_binPROGRAMS \
	install-app_vicsample_binPROGRAMS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-app_samplenavi_binPROGRAMS \
	uninstall-app_soundsample_binPROGRAMS \
	uninstall-app_vicsample_binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-app_samplenavi_binPROGRAMS \
	clean-app_soundsample_binPROGRAMS \
	clean-app_vicsample_binPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-app_samplenavi_binPROGRAMS \
	install-app_soundsample_binPROGRAMS \
	install-app_vicsample_binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am \
	uninstall-app_samplenavi_binPROGRAMS \
	uninstall-app_soundsample_binPROGRAMS \
	uninstall-app_vicsample_binPROGRAMS


#ico_app_samplenavi_LDADD = -L/usr/lib -lico-app-fw-efl -lico-uxf-weston-plugin -lico-app-fw -ldbus-1 -lpthread -lrt /usr/lib/libopencv_calib3d.so /usr/lib/libopencv_contrib.so /usr/lib/libopencv_core.so /usr/lib/libopencv_features2d.so /usr/lib/libopencv_flann.so /usr/lib/libopencv_gpu.so /usr/lib/libopencv_highgui.so /usr/lib/libopencv_imgproc.so /usr/lib/libopencv_legacy.so /usr/lib/libopencv_ml.so /usr/lib/libopencv_nonfree.so /usr/lib/libopencv_objdetect.so /usr/lib/libopencv_photo.so /usr/lib/libopencv_stitching.so /usr/lib/libopencv_ts.so /usr/lib/libopencv_video.so /usr/lib/libopencv_videostab.so -lwebsockets -laul -lecore_evas -lecore -leina -levas -lecore_wayland -lelementary -lm -leet -lecore_file -ledje -lethumb_client -lecore_imf -lecore_con -lglib-2.0 -lwayland-client -lwayland-cursor -lwayland-egl -lwayland-server -lewebkit2 -lcairo -lGLESv2 -lEGL -lpangocairo-1.0 -lpangoft2-1.0 -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgdk_pixbuf-2.0 -lgthread-2.0

#ico_app_samplenavi_CFLAGS = -Wall -I. -I/usr/include/opencv -I/usr/include/ico-appfw -I/usr/include/ecore-1 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/eina-1 -I/usr/include/eina-1/eina -I/usr/include/evas-1 -I/usr/include/eet-1 -I/usr/include/pixman-1 -I/usr/include/harfbuzz -I/usr/include/fribidi -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/elementary-1 -I/usr/include/ethumb-1 -I/usr/include/efreet-1 -I/usr/include/e_dbus-1 -I/usr/include/emotion-1 -I/usr/include/edje-1 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/embryo-1 -I/usr/include/ewebkit2-0 -I/usr/include/ewebkit2-0/WebKit2 -I/usr/include/ewebkit2-0/NPAPI -I/usr/include/cairo -I/usr/include/libpng12 -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
